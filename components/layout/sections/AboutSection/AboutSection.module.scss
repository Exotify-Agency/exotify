@import "@/sass/abstracts/mixins";

.About {
  &Section {
    background-color: var(--c-primary-d);
    border-top: 0.1rem solid var(--bd-gold);
    padding-bottom: calc(var(--pd-section-top) * 2);
    padding-top: calc(var(--pd-section-top) * 2);

    @include respond(800) {
      padding-top: 15vw;
      padding-bottom: 15vw;
    }

    @include respond(500) {
      padding: var(--pd-limit-width);
    }
  }

  $image-index: 3;

  &Container {
    @include limitWidth();

    display: grid;
    grid-template-columns: auto minmax(35rem, 40rem);
    gap: 5rem;
    justify-content: center;
    align-items: center;

    padding: var(--pd-limit-width);
    position: relative;

    @include respond(800) {
      grid-template-columns: 1fr;
      max-width: 50rem;
      padding: 5rem;
      padding-top: 0; // for image
      gap: var(--pd-limit-width);
    }

    @include respond(500) {
      padding: var(--pd-limit-width);
    }
  }

  &Image {
    $bleed: 25rem;

    &Wrapper {
      width: 47.5rem;
      height: calc(50rem + 25rem);
      margin-bottom: -25rem;
      margin-top: -10rem;
      z-index: $image-index;

      @include respond(1000) {
        width: 42.5rem;
        height: calc(45rem + 25rem);
      }

      @include respond(800) {
        margin: 0;
        width: 100%;
        height: auto;
        aspect-ratio: 1;
      }
    }

    width: 100%;
    height: 100%;
    position: relative;
  }

  &Shape {
    position: absolute;
    height: 100%;
    width: 100%;
    left: 50%;
    bottom: 0;
    translate: -50% 0;
    background-color: var(--c-primary);
    z-index: 0;

    @include respond(800) {
      bottom: unset;
      top: calc(var(--pd-limit-width) * 4);
      height: calc(100% - var(--pd-limit-width) * 4);
    }
  }

  &Content {
    display: grid;
    gap: var(--pd-limit-width);
    width: 100%;
    position: relative;
    z-index: calc(#{$image-index} + 1);

    @include respond(800) {
      text-align: center;
    }

    @include respond(500) {
      padding: 1rem;
      padding-top: 0;
    }

    & :global(.header) {
      color: var(--c-gold);
    }

    & p {
      color: var(--txt-basic-l);
    }
  }
}
