@import "@/sass/abstracts/mixins";

section.ContactSection {
  padding-top: calc(var(--pd-section-top) + 2rem - 3rem); // 3rem = mg-top below

  justify-content: center;
  gap: 0;

  @include respond(1000) {
    justify-content: unset;
  }

  @include respond(800) {
    justify-content: center;
    grid-template-columns: minmax(auto, 60rem);
  }

  @include respond(600) {
    padding-bottom: 5rem;
  }

  @include respond(400) {
    padding: 0;
  }
}

.Contact {
}

.Message {
  &Wrapper {
    display: grid;
  }

  $border-spacing: 2rem;

  display: grid;
  gap: var(--pd-limit-width);
  grid-template-columns: repeat(2, 1fr);
  align-items: center;

  width: 60vw;
  min-width: 100rem;
  position: relative;
  padding: calc(#{$border-spacing} + var(--pd-limit-width));
  padding-top: calc(#{$border-spacing} + var(--pd-limit-width) + 6rem);
  margin-top: 3rem;

  @include respond(1000) {
    min-width: 0;
    width: 100%;
  }

  @include respond(800) {
    grid-template-columns: 1fr;
  }

  @include respond(400) {
    margin: 0;
    padding: calc(#{$border-spacing} + var(--pd-limit-width));
  }

  @include respond(300) {
    padding: var(--pd-limit-width);
    border-color: transparent !important;
  }

  &Background {
    position: absolute;
    width: 100%;
    height: 100%;

    overflow: hidden;
    display: grid;

    & img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: bottom;
    }
  }

  &Titlebar {
    &Wrapper {
      position: absolute;
      left: 25%;
      top: 2rem;
      translate: -50% -50%;
      z-index: 2;

      @include respond(1000) {
        left: 25rem;
      }

      @include respond(800) {
        left: 50%;
      }

      @include respond(400) {
        position: relative;
        top: unset;
        left: unset;
        translate: unset;
      }
    }

    background-color: var(--c-primary);
    color: var(--c-gold);
    padding: 2rem var(--pd-limit-width);
    width: max-content;

    @include respond(400) {
      background-color: transparent;
      padding: 0;
      width: auto;
    }

    & > * {
      color: inherit;
    }
  }

  &Button {
    &Wrapper {
      display: grid;

      & button {
        width: 100%;
      }
    }
  }
}

.Alternatives {
  display: flex;
  gap: var(--pd-limit-width);
  justify-content: center;
  align-items: center;
  padding: var(--pd-limit-width) 0;

  @include respond(500) {
    flex-direction: column;
    gap: 1rem;
  }

  @include respond(400) {
    display: none;
  }

  & .divider {
    background-color: var(--c-gold);
    width: 0.1rem;
    height: 2rem;
    display: block;

    @include respond(500) {
      display: none;
    }
  }
}

.Alternative {
  width: 20rem;
  display: grid;
  justify-items: center;
  gap: 1rem;

  @include respond(800) {
    width: auto;
  }

  &:first-child {
    // justify-items: end;
  }
  &:last-child {
    // justify-items: start;
  }
}
